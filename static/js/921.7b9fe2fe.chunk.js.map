{"version":3,"file":"static/js/921.7b9fe2fe.chunk.js","mappings":"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","sources":["../node_modules/use-copy/dist/index.m.js","components/Contacts.js","pages/Contacts.js"],"sourcesContent":["import { useRef, useState, useCallback, useEffect } from 'react';\n\nvar toggleSelection = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = toggleSelection();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        e.clipboardData.clearData();\n        e.clipboardData.setData(options.format, text);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nvar copyToClipboard = copy;\n\nfunction useCopy(str) {\r\n    var copyableString = useRef(str);\r\n    var _a = useState(false), copied = _a[0], setCopied = _a[1];\r\n    var copyAction = useCallback(function () {\r\n        var copiedString = copyToClipboard(copyableString.current);\r\n        setCopied(copiedString);\r\n    }, [copyableString]);\r\n    useEffect(function () {\r\n        copyableString.current = str;\r\n    }, [str]);\r\n    return [copied, copyAction, setCopied];\r\n}\n\nexport default useCopy;\n","import { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport Section from \"../UI/Section\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useCopy from \"use-copy\";\r\n\r\nfunction Contacts({ contactInfo }) {\r\n  const [copied, copy, setCopied] = useCopy(contactInfo.email.address);\r\n  const [animated, setAnimated] = useState(false);\r\n  useEffect(() => {\r\n    setAnimated(true);\r\n  }, []);\r\n\r\n  const copyText = () => {\r\n    copy();\r\n\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Section index={1} extraClasses=\"flex justify-center items-center\">\r\n      <div className=\" text-white bg-primary grid md:grid-cols-2 p-20 md:w-10/12 md:rounded-xl gap-10\">\r\n        <div className=\" md:order-2\">\r\n          <h2\r\n            className={`${\r\n              animated ? \"\" : \"translate-y-10 opacity-0\"\r\n            } transform transition duration-2000 text-white text-5xl font-bold`}\r\n          >\r\n            Ping me!\r\n          </h2>\r\n          <p\r\n            className={`${\r\n              animated ? \"\" : \"translate-y-10 opacity-0\"\r\n            } transform transition duration-2000 text-white text-2xl`}\r\n          >\r\n            {contactInfo.desc}\r\n          </p>\r\n          <div\r\n            className={`${\r\n              animated ? \"\" : \"translate-y-10 opacity-0\"\r\n            } transform transition duration-2000 flex gap-6 mt-5`}\r\n          >\r\n            {contactInfo.contactChannels.map((info) => (\r\n              <a href={info.href} target=\"_black\">\r\n                <LazyLoadImage\r\n                  src={info.icon}\r\n                  className=\" rounded-full transp w-12\"\r\n                />\r\n              </a>\r\n            ))}\r\n            <div className=\" relative\">\r\n              {copied && <div className=\" font-bold absolute -top-7 -left-4 w-20 h-6 bg-white text-black text-xs text-center rounded-md leading-5\">Email copied.</div>}\r\n              <button onClick={copyText}>\r\n                {copied ? (\r\n                  <LazyLoadImage\r\n                    src={contactInfo.email.copiedIcon}\r\n                    className=\" rounded-full transp w-12\"\r\n                  />\r\n                ) : (\r\n                  <LazyLoadImage\r\n                    src={contactInfo.email.icon}\r\n                    className=\" rounded-full transp w-12\"\r\n                  />\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LazyLoadImage\r\n          src={contactInfo.img}\r\n          className=\"mx-auto rounded-full md:order-1 w-80\"\r\n          placeholderSrc={process.env.PUBLIC_URL + \"/logo512.png\"}\r\n        />\r\n      </div>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import Contacts from \"../components/Contacts\";\r\nimport { info } from \"../info/info\";\r\n\r\nfunction ContactsPage(params) {\r\n  const contactInfo = info.contactInfo;\r\n\r\n  return <Contacts contactInfo={contactInfo} />;\r\n}\r\n\r\nexport default ContactsPage;\r\n"],"names":["copyToClipboard","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","getSelection","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","removeAllRanges","type","forEach","addRange","focus","toggleSelection","createRange","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","clearData","setData","body","appendChild","selectNodeContents","execCommand","Error","err","console","error","warn","window","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeChild","str","copyableString","useRef","_a","useState","copied","setCopied","copyAction","useCallback","copiedString","current","useEffect","_ref","contactInfo","_useCopy","useCopy","email","address","_useCopy2","_slicedToArray","copy","_useState","_useState2","animated","setAnimated","_jsx","Section","index","extraClasses","children","_jsxs","className","concat","desc","contactChannels","map","info","href","target","LazyLoadImage","src","icon","onClick","setTimeout","copiedIcon","img","placeholderSrc","process","params","Contacts"],"sourceRoot":""}